// <auto-generated />
using System;
using DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20250326061939_tablolartamam2")]
    partial class tablolartamam2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Kategori", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("No"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("No");

                    b.ToTable("Kategori");
                });

            modelBuilder.Entity("Entities.Kullanici", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("No"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KullaniciAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parola")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RolNo")
                        .HasColumnType("int");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("No");

                    b.HasIndex("RolNo");

                    b.ToTable("Kullanici");
                });

            modelBuilder.Entity("Entities.Rol", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("No"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("No");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("Entities.Sepet", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("No"));

                    b.Property<DateTime>("EklemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int>("KullaniciNo")
                        .HasColumnType("int");

                    b.Property<int>("UrunNo")
                        .HasColumnType("int");

                    b.HasKey("No");

                    b.HasIndex("KullaniciNo");

                    b.HasIndex("UrunNo");

                    b.ToTable("Sepet");
                });

            modelBuilder.Entity("Entities.Siparis", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("No"));

                    b.Property<DateTime>("EklemeTarih")
                        .HasColumnType("datetime2");

                    b.Property<int>("Fiyat")
                        .HasColumnType("int");

                    b.Property<int>("KullaniciNo")
                        .HasColumnType("int");

                    b.Property<int>("SiparisDurumNo")
                        .HasColumnType("int");

                    b.Property<int>("UrunNo")
                        .HasColumnType("int");

                    b.HasKey("No");

                    b.HasIndex("KullaniciNo");

                    b.HasIndex("SiparisDurumNo");

                    b.HasIndex("UrunNo");

                    b.ToTable("Siparis");
                });

            modelBuilder.Entity("Entities.SiparisDurum", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("No"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("No");

                    b.ToTable("SiparisDurum");
                });

            modelBuilder.Entity("Entities.Urun", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("No"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Fiyat")
                        .HasColumnType("int");

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KategoriNo")
                        .HasColumnType("int");

                    b.Property<string>("ResimYol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stok")
                        .HasColumnType("int");

                    b.HasKey("No");

                    b.HasIndex("KategoriNo");

                    b.ToTable("Urun");
                });

            modelBuilder.Entity("Entities.Yorum", b =>
                {
                    b.Property<int>("No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("No"));

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UrunNo")
                        .HasColumnType("int");

                    b.HasKey("No");

                    b.HasIndex("UrunNo");

                    b.ToTable("Yorum");
                });

            modelBuilder.Entity("Entities.Kullanici", b =>
                {
                    b.HasOne("Entities.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Entities.Sepet", b =>
                {
                    b.HasOne("Entities.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Urun", "Urun")
                        .WithMany()
                        .HasForeignKey("UrunNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("Entities.Siparis", b =>
                {
                    b.HasOne("Entities.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.SiparisDurum", "SiparisDurum")
                        .WithMany()
                        .HasForeignKey("SiparisDurumNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Urun", "Urun")
                        .WithMany()
                        .HasForeignKey("UrunNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("SiparisDurum");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("Entities.Urun", b =>
                {
                    b.HasOne("Entities.Kategori", "Kategori")
                        .WithMany()
                        .HasForeignKey("KategoriNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("Entities.Yorum", b =>
                {
                    b.HasOne("Entities.Urun", null)
                        .WithMany("Yorum")
                        .HasForeignKey("UrunNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Entities.Urun", b =>
                {
                    b.Navigation("Yorum");
                });
#pragma warning restore 612, 618
        }
    }
}
